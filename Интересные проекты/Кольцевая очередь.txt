//кольцевая очередь
/*
class QueueFullException extends Exception{
    int size;
    QueueFullException(int s) {size = s;}
    public String toString(){return "ХпОчередь переполнена. Максимальный размер составляет " + size + " элементов.";}
}
class QueueEmptyException extends Exception{
    public String toString(){return "\nОчередь пуста.";}
}
interface IGenQ<T>{
    void put(T ch) throws QueueFullException;
    T get() throws QueueEmptyException;
}
class GenQueue<T> implements IGenQ<T>{
    private T[] q;
    private int putloc, getlock;
    public GenQueue(T[] aRef){
        q = aRef;
        putloc = getlock = 0;
    }
    public void put(T obj) throws QueueFullException{
        if(putloc == q.length)
            throw new QueueFullException(q.length);
        q[putloc++] = obj;
    }
    public T get() throws QueueEmptyException{
        if(getlock == putloc)
            throw new QueueEmptyException();
        return q[getlock++];
    }
}
*/